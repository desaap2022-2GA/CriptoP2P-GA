plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'war'
    id "jacoco"
    id "org.sonarqube" version "3.4.0.2513"
}
/*
sonarqube {
	properties {
		property "sonar.projectKey", "desaap2022-2ga"
		property "sonar.organization", "desaap2022-2GA"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}
*/
jacocoTestReport {
    reports {
        xml.enabled true
    }
}
compileJava.options.encoding = 'utf-8'
compileTestJava.options.encoding = 'utf-8'

group = 'ar.edu.unq.desapp.Grupo-A-022022'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.testng:testng:7.6.1'
    implementation 'org.testng:testng:7.6.1'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    implementation 'org.postgresql:postgresql:42.5.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    //implementation 'org.springdoc:springdoc-openapi-ui:*'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'
    //implementation 'org.projectlombok:lombok:1.18.22'
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams(true)
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

/*
tasks.named('test') {
	useJUnitPlatform()
}*/