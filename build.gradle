plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'war'
	id "org.sonarqube" version "3.4.0.2513"
}

/*
sonarqube {
	properties {
		property "sonar.projectKey", "desaap2022-2ga"
		property "sonar.organization", "desaap2022-2GA"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}
*/
compileJava.options.encoding = 'utf-8'
compileTestJava.options.encoding = 'utf-8'

group = 'ar.edu.unq.desapp.Grupo-A-022022'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.testng:testng:7.6.1'
	implementation 'org.testng:testng:7.6.1'
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	testCompileOnly 'org.projectlombok:lombok:1.18.24'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
	implementation 'org.postgresql:postgresql:42.5.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
}

test {
	useJUnitPlatform()
	testLogging.showStandardStreams(true)
	testLogging {
		events "passed", "skipped", "failed"
	}
}
/*
dependencies {
	compile 'com.github.jsimone:webapp-runner:9.0.27.1'
}

task stage() {
	dependsOn clean, war
}
war.mustRunAfter clean

task copyToLib(type: Copy) {
	into "$buildDir/server"
	from(configurations.compile) {
		include "webapp-runner*"
	}
}

stage.dependsOn(copyToLib)*/
/*
tasks.named('test') {
	useJUnitPlatform()
}*/