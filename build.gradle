plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'war'
    id "jacoco"
    id "org.sonarqube" version "3.4.0.2513"
}

compileJava.options.encoding = 'utf-8'
compileTestJava.options.encoding = 'utf-8'

group = 'ar.edu.unq.desapp.Grupo-A-022022'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'org.testng:testng:7.6.1'
    implementation 'org.testng:testng:7.6.1'

    implementation 'org.springframework.boot:spring-boot-starter-security'

    runtimeOnly 'com.h2database:h2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    implementation 'org.postgresql:postgresql:42.5.0'

    implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'

    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    implementation 'org.mapstruct:mapstruct:1.5.3.Final'

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'

    testImplementation 'org.mockito:mockito-core:4.8.0'
    testImplementation 'junit:junit-dep:4.11'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: '2.7.0'

}

test {
    filter {
        //exclude all tests from a package.
        excludeTestsMatching "ar.edu.unq.desapp.grupoa022022.backenddesappapi.webservice.*"
    }
    useJUnitPlatform()
    testLogging.showStandardStreams(true)
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required.set(true)
        csv.required.set(false)
        html.outputLocation.set(layout.buildDirectory.dir("jacocoHtml"))
    }
}

test.finalizedBy jacocoTestReport
tasks.named('sonarqube').configure {
    dependsOn test
}

sonarqube {
    properties {
        property "sonar.projectKey", "desaap2022-2GA_CriptoP2P-GA"
        property "sonar.organization", "desaap2022-2ga"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean
/*
tasks.named('test') {
	useJUnitPlatform()
}*/
